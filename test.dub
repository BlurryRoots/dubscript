c & ("keks" < depp_kopf | (-2.3 \= 13)) : {
    def! keks_nase -1337.42;

    def? keks_nase : {
        rm! keks_nase;
    };

    def! klöße "brauße";
};

/*
 * stuff with stuff
 */
c : false {
    ("keks" < depp_kopf) : {
        def! stuff "nudelsalat";
    } 
    : depp_kopf = "hans" {
        //
        def! map <("drei" 3)(234 "stuff")>;
        // create a list
        def! keks [12 3 42];

        def! hans (value) -> {
            // return result of arithmic expression
            return value * value
                 + 3 * value * (0xAFFE42 + 1.618);
        };

        def! blank () -> {};

        def! sum 0;
        return keks.reduce (a b) -> {
            return a + b;
        };
    };

    (-2.3 \= 13) : {
        def? stuff;
    };
};